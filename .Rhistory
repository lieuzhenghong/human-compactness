5 ** 2
log(e)
log(exp())
log(exp(1))
exp(1)
y <- log(exp(1));
A1 <- matrix(z1, 3, 3)
source('~/.active-rstudio-document', echo=TRUE)
A2 <- matrix(z1, 3, 3, TRUE)
?cbind
cbind(A1, A2)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
head(nj, 2)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
A2[3,2]
?table
count(nj$us_born)
table(nj$us_born)
nj$white = 1 - nj$black - nj$hisp
table(nj$white)
corr(nj$wage, nj$educ)
cor(nj$wage, nj$educ)
lm(nj$wage, nj$educ + nj$white)
scatter(nj$wage, nj$educ)
plot(nj$wage, nj$educ)
# TASK: Prepare the scatter plot above for black individuals only
plot(nj$wage, nj$educ & nj$black)
# TASK: Prepare the scatter plot above for black individuals only
plot(nj[nj$black]$wage, nj$[nj$black]educ)
# TASK: Prepare the scatter plot above for black individuals only
nj$black
lm(nj$wage ~ nj$educ + nj$white)
pllm(nj$wage ~ nj$educ * nj$white)
plm(nj$wage ~ nj$educ * nj$white)
glm(nj$wage ~ nj$educ * nj$white)
TASK: Prepare the scatter plot above for black individuals only
#
source('~/.active-rstudio-document', echo=TRUE)
# TASK: Prepare the scatter plot above for black individuals only
# nj$black
nj_black = nj[nj$black == 1]
# TASK: Prepare the scatter plot above for black individuals only
# nj$black
nj_black <- nj[nj$black == 1]
# TASK: Prepare the scatter plot above for black individuals only
# nj$black
nj[black == 1]
# TASK: Prepare the scatter plot above for black individuals only
# nj$black
nj$black == 1
g <- lm(nj$wage ~ nj$educ * nj$white)
source('~/.active-rstudio-document', echo=TRUE)
plot(g, type="p")
# TASK: Prepare the scatter plot above for black individuals only
nj[nj$black == TRUE]
# TASK: Prepare the scatter plot above for black individuals only
nj[black == TRUE]
# TASK: Prepare the scatter plot above for black individuals only
nj[nj$black == TRUE]
# TASK: Prepare the scatter plot above for black individuals only
nj[nj$black]
# TASK: Prepare the scatter plot above for black individuals only
nj[nj$black == TRUE]
# TASK: Prepare the scatter plot above for black individuals only
nj[nj$black == 1]
# TASK: Prepare the scatter plot above for black individuals only
nj[nj$black]
rows(nj)
table(nj)
# TASK: Prepare the scatter plot above for black individuals only
nj[nj$black]
# TASK: Prepare the scatter plot above for black individuals only
nj[nj$black == 1]
# TASK: Prepare the scatter plot above for black individuals only
table(nj[nj$black == 1])
source('~/.active-rstudio-document', echo=TRUE)
plot(g)
# TASK: Prepare the scatter plot above for black individuals only
mean(nj$wage[nj$black == 1])
plot(nj$wage[nj$black == 1], nj$educ[nj$black == 1])
plot(nj$wage[nj$black == 0], nj$educ[nj$black == 0], col="red")
source('~/.active-rstudio-document', echo=TRUE)
# TASK: Prepare the scatter plot above for black individuals only
plot(nj$wage, nj$educ)
?ggplot
library(ggplot2)
install.packages(ggplot2)
install.packages(ggplot)
library(ggplot2);
source('~/.active-rstudio-document', echo=TRUE)
qplot(x = educ, y = wage, data = nj, geom="point")
ggplot(data=nj, aes(educ, wage) +
geom_point(aes(color = cyl)) +
coord_cartesian()
)
ggplot(data=nj, aes(educ, wage)) +
geom_point(aes(color = cyl)) +
coord_cartesian()
ggplot(data=nj, aes(educ, wage)) +
geom_point(aes(color = educ)) +
coord_cartesian()
ggplot(data=nj, aes(educ, wage)) +
geom_point(aes(color = black)) +
coord_cartesian()
ggplot(data=nj, aes(educ, wage)) +
geom_point(aes(color = black)) +
geom_line(aes(color=black))
ggplot(data=nj, aes(educ, wage)) +
geom_point(aes(color = black)) +
geom_line(aes(color=black)) +
coord_cartesian()
ggplot(data=nj, aes(educ, wage)) +
geom_point(aes(color = black)) +
geom_smooth(aes(color=black)) +
coord_cartesian()
predict(nj$wage, nj$educ)
?preduct
?predict
predict(g)
ggplot(data=nj, aes(educ, wage)) +
#geom_point(aes(color = black)) +
geom_smooth(aes(color=black)) +
coord_cartesian()
ggplot(data=nj, aes(educ, wage)) +
#geom_point(aes(color = black)) +
geom_smooth(aes(method="lm")) +
coord_cartesian()
ggplot(data=nj, aes(educ, wage)) +
#geom_point(aes(color = black)) +
#geom_smooth(aes(method="lm")) +
coord_cartesian()
ggplot(data=nj, aes(educ, wage, color=black)) +
geom_point(color=black) +
geom_smooth(method="lm") +
coord_cartesian())
ggplot(data=nj, aes(educ, wage, color=black)) +
geom_point(color=black) +
geom_smooth(method="lm") +
coord_cartesian()
ggplot(data=nj, aes(educ, wage, color=black)) +
geom_point(color="black") +
geom_smooth(method="lm") +
coord_cartesian()
ggplot(data=nj, aes(x=educ, y=wage, color=black)) +
geom_point(color="black") +
geom_smooth(method="lm") +
coord_cartesian()
ggplot(data=nj, aes(x=educ, y=wage, color=black)) +
geom_point(color="black") +
geom_smooth(method="lm") +
coord_cartesian())
ggplot(data=nj, aes(x=educ, y=wage, color=black) +
geom_point(color="black") +
geom_smooth(method="lm") +
coord_cartesian())
ggplot(data=nj) +
aes(x=educ, y=wage, color=black) +
geom_point(color="black") +
geom_smooth(method="lm") +
coord_cartesian()
ggplot(data=nj) +
aes(x=educ, y=wage, color=nj$black) +
geom_point(color="black") +
geom_smooth(method="lm") +
coord_cartesian()
ggplot(nj) +
aes(x = educ, y = wage, color = black) +
geom_point(color = "grey") +
geom_smooth(method="lm", data = black_wages) +
geom_smooth(method="lm", data = white_wages)
black_wages <- filter(wage, educ, black==1)
white_wages <- filter(wage, educ, nj$white==1)
black_wages <- filter(wage, educ, black==1)
source('~/.active-rstudio-document', echo=TRUE)
black_wages <- filter(njblack==1)
black_wages <- filter(nj, black==1)
white_wages <- filter(nj, white==1)
white_wages <- filter(nj, nj$white==1)
black_wages <- filter(nj, nj$black==1)
ggplot(nj) +
aes(x = educ, y = wage, color = black) +
geom_point(color = "grey") +
geom_smooth(method="lm", data = black_wages) +
geom_smooth(method="lm", data = white_wages)
View(nj)
black_wages <- filter(nj, black==1)
qplot(x = educ, y = wages, facets = ~black, data = nj) +
geom_smooth(method = "lm")
qplot(x = educ, y = wage, facets = ~black, data = nj) +
geom_smooth(method = "lm")
qplot(x = educ, y = wage, data = nj, color=black) +
geom_smooth(method = "lm")
qplot(x = educ, y = wage, data = nj, color=black==1) +
geom_smooth(method = "lm")
ggplot(nj) +
aes(x = educ, y = wage, color = black==1) +
geom_point(color = "grey") +
geom_smooth(method="lm", data = black_wages) +
geom_smooth(method="lm", data = white_wages)
black_wages <- filter(nj, black==1)
white_wages <- filter(nj, white==1)
source('~/.active-rstudio-document', echo=TRUE)
install.packages("ggplot2")
qplot(x = educ, y = wage, data = nj, color=black==1) +
geom_smooth(method = "lm")
source('~/.active-rstudio-document', echo=TRUE)
ggplot(nj) +
aes(x=educ, y=wage, color=black==1) +
geom_point(color = "grey") +
geom_smooth(method = "lm")
black_wages <- filter(nj, black==1)
?filter
nj_hisp <- filter(nj, hisp==1)
nj_black <- nj[nj$black == 1]
nj[nj$black == 1]
library(dplyr)
# install.packages("estimatr")
# install.packages("ggplot2");
install.packages(dplyr);
library(dplyr);
# install.packages("estimatr")
# install.packages("ggplot2");
install.packages("dplyr);
# install.packages("estimatr")
# install.packages("ggplot2");
install.packages("dplyr");
nj(which(nj[, 'black'] == 1))
nj[nj$black==1, ]
n <- nj[nj$black==1, ]
n <- nj[nj$black==1]
n <- nj[nj$black==1]
n <- nj[nj$black==1, ]
ggplot(nj) +
aes(x = educ, y = wage, color = black==1) +
geom_point(color = "grey") +
geom_smooth(method="lm", data = nj[nj$black==1]) +
geom_smooth(method="lm", data = nj[nj$white==1])
ggplot(nj) +
aes(x = educ, y = wage, color = black==1) +
geom_point(color = "grey") +
geom_smooth(method="lm", data = nj[nj$black==1, ]) +
geom_smooth(method="lm", data = nj[nj$white==1, ])
ggplot(nj) +
aes(x = educ, y = wage, color = c(black, white, hisp)) +
geom_point(color = "grey") +
geom_smooth(method="lm", data = nj[nj$black==1, ]) +
geom_smooth(method="lm", data = nj[nj$white==1, ])
ggplot(nj) +
aes(x = educ, y = wage, color = c(black==1, white==1, hisp==1)) +
geom_point(color = "grey") +
geom_smooth(method="lm", data = nj[nj$black==1, ]) +
geom_smooth(method="lm", data = nj[nj$white==1, ])
ggplot(nj) +
aes(x = educ, y = wage) +
geom_point(color = "grey") +
geom_smooth(method="lm", data = nj[nj$black==1, ]) +
geom_smooth(method="lm", data = nj[nj$white==1, ])
ggplot(nj) +
aes(x = educ, y = wage) +
geom_point(color = "grey") +
geom_smooth(method="lm", data = nj[nj$black==1, ], aes(color="black")) +
geom_smooth(method="lm", data = nj[nj$white==1, ])
ggplot(nj) +
aes(x = educ, y = wage) +
geom_point(color = "grey") +
geom_smooth(method="lm", data = nj[nj$black==1, ], aes(color="black")) +
geom_smooth(method="lm", data = nj[nj$white==1, ], aes(color="white"))
ggplot(nj) +
aes(x = educ, y = wage) +
geom_point(color = "grey") +
geom_smooth(method="lm", data = nj[nj$black==1, ], aes(color="black")) +
geom_smooth(method="lm", data = nj[nj$white==1, ], aes(color="white")) +
geom_smooth(method="lm", data = nj[nj$hisp==1, ], aes(color="hisp")) +
ggplot(nj) +
aes(x = educ, y = wage) +
geom_point(color = "grey") +
geom_smooth(method="lm", data = nj[nj$black==1, ], aes(color="black")) +
geom_smooth(method="lm", data = nj[nj$white==1, ], aes(color="white")) +
geom_smooth(method="lm", data = nj[nj$hisp==1, ], aes(color="hisp"))
ggplot(nj) +
aes(x = educ, y = wage) +
geom_point(color = "grey") +
geom_smooth(method="lm", data = nj[nj$black==1, ], aes(color="black")) +
geom_smooth(method="lm", data = nj[nj$white==1, ], aes(color="white")) +
geom_smooth(method="lm", data = nj[nj$hisp==1, ], aes(color="hisp"))
View(nj)
View(n)
source('~/.active-rstudio-document', echo=TRUE)
View(nj)
g <- lm(nj$wage ~ nj$educ * nj$white)
summary(g)
g <- lm(nj$wage ~ nj$afqtraw * nj$white)
summary(g)
g <- lm(nj$wage ~ nj$educ * nj$white)
summary(g)
data = read.csv("height.csv")
cov(nj$wage, nj$educ)
nj = read.csv("njdata.csv")
data = read.csv("height.csv")
data = read.csv("height.csv")
data = read.csv("height.csv")
heights <- read.csv("height.csv")
heights <- read.csv("~/dev/ppe_work/2.3 Quantitive Economics/height.csv")
heights <- read.csv("njdata.csv")
heights <- read.csv("height.csv")
heights <- read.csv("height.csv")
heights <- read.csv("height.csv")
heights <- read.csv("height.csv")
ls
pwd
clear
ls
getwd
getw()
heights <- read.csv("height.csv")
getwd()
getwd()
heights <- read.csv("~/dev/ppe-work/height.csv")
heights <- read.csv("~/dev/ppe-work/2.3 [2019 TT] 300 Quantitative Economics/height.csv")
d <- read.csv("~/dev/ppe-work/2.3 [2019 TT] 300 Quantitative Economics/height.csv")
View(heights)
source('~/dev/ppe-work/2.3 [2019 TT] 300 Quantitative Economics/week_4_q6.r', echo=TRUE)
lm_robust(d[earnings] ~ d[height])
lm(d[earnings] ~ d[height])
d[earnings]
d[earnings]
d
lm(d$earnings ~ d$height)
summary(model_1)
source('~/dev/ppe-work/2.3 [2019 TT] 300 Quantitative Economics/week_4_q6.r', echo=TRUE)
help(lm_robust)
library(estimatr);
model_1 <- lm_robust(d$earnings ~ d$height)
summary(model_1)
# Now assuming homoskedasticity
model_1b <- lm(d$earnings ~ d$height)
# Now allowing for an interaction term between males and females
model_2 <- lm_robust(d$earnings ~ d$height * d$sex)
summary(model_2)
d$lths = d$educ <= 11
d$lths = 1 if d$educ <= 11
d$lths = as.integer(d$educ <= 11)
d$lths==1
d[613]
d[613,]
View(d)
d$hs = as.integer(d$educ = 12)
d$scoll = as.integer(d$educ <= 15 && d$educ >= 13)
d$hs = as.integer(d$educ == 12)
d$scoll = as.integer(d$educ <= 15 && d$educ >= 13)
d$coll = as.integer(d$educ >= 16)
d_females = d[d$sex == 0]
d_females <- d[d$sex == 0,]
model_3a <- lm_robust(d_females$earnings ~ d_females$height)
summary(model_3a)
summary(model_3b)
model_3b <- lm_robust(d_females$earnings ~ d_females$height +
d_females$lths + d_females$hs +
d_females$scoll)
summary(model_3b)
d$scoll = as.integer(d$educ <= 15 && d$educ >= 13)
# Dataset of females only
d_females <- d[d$sex == 0,]
model_3b <- lm_robust(d_females$earnings ~ d_females$height +
d_females$lths + d_females$hs +
d_females$scoll)
summary(model_3b)
d$scoll = as.integer((d$educ <= 15 && d$educ >= 13))
# Dataset of females only
d_females <- d[d$sex == 0,]
d$scoll = as.integer((d$educ <= 15 & d$educ >= 13))
# Dataset of females only
d_females <- d[d$sex == 0,]
summary(model_3a)
model_3b <- lm_robust(d_females$earnings ~ d_females$height +
d_females$lths + d_females$hs +
d_females$scoll)
summary(model_3b)
summary(model_3a)
'''
After including the control variables, we find that the
coefficient of height has fallen greatly, from 511.2 in model
3a to 135.1 in model 3b. Furthermore, the coefficient
is no longer significant at the 5% significance level
(p-value 0.143).
'''
**Very significant finding, huge t-value**
summary(model_1)
# Now assuming homoskedasticity
model_1b <- lm(d$earnings ~ d$height)
summary(model_1b)
summary(model_2)
Model: Earnings = \beta
Null hypothesis: \beta_2
**From the summary we can see that the estimate of $\beta_3$ is much more than 0, and the p-value is very significant ($1 * 10^{-8}$).**
**Here we can see that the OLS regression equation is actually estimating the effect of two variables:
1. The effect of cognitive ability on earnings;
2. The effect of *the part of height uncorrelated with cognitive ability* on earnings.
So even though we have not included cognitive ability in our OLS regression, our OLS regression equation nonetheless contains cognitive ability, which will give us a positive coefficient.
**
summary(model_3b)
**The magnitude of the coefficients is all negative: this is to be expected, less education (compared to college) means less earnings. Coefficient keeps decreasing with increasing education, from -31857 for women with less than high school, to -12649 for women with some college education: this also accords with our intuition.**
linearHypothesis(model_3b, c("lths=0", "hs=0", "scoll=0"))
library(cars);
library(car);
install.packages(car)
install.packages("car")
library(car);
**I use an F-test in the CAR package**:
library(car);
install.packages("car")
pwd
library(car);
install.packages("car")
```{r}
install.packages("car")
library(car);
linearHypothesis(model_3b, c("lths=0", "hs=0", "scoll=0"))
linearHypothesis(model_3b, c("d_females$lths=0", "d_females$hs=0", "d_females$scoll=0"))
library(stargazer);
install.packages("stargazer")
library(stargazer);
stargazer(summary(model_1))
stargazer((model_1))
stargazer(model_1)
summary
stargazer(summary(model_1))
stargazer(summary(model_1))
print(p_j)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
print(p_star, p_star2)
source('~/.active-rstudio-document', echo=TRUE)
print(i)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
print(i)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
for (sigma in c(0.01, 0.1, 0.25, 0.5, 1, 10000, 100000)) {
print("Sigma:")
print(sigma)
for (i in 1:100) {
p_star = i/100
p_j = 1- cdfNormalTruncated(x=p_star,mu=p_star,sigma=sigma,a=0,b=1)
p_star2 = (3/4 - p_j) / (1 - p_j)
if (abs(p_star - p_star2) < 0.01) {
print(i)
print(p_star)
print(p_star2)
}
}
}
source('~/.active-rstudio-document', echo=TRUE)
if (abs(p_star - p_star2) < 0.005) {
print(i)
print(p_star)
print(p_star2)
}
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/dev/human_compactness/final_regressions.r', echo=TRUE)
dwplot(tidied_all,
ggtitle("Coefficient estimates of OLS regressions") +
vline = geom_vline(xintercept = 0, colour = "grey60", linetype = 2)) %>%
relabel_predictors(c('ch' = "Convex Hull", 'hc' = 'Human Compactness',
'pp' = "Polsby-Popper", 'reock' = "Reock")) +
theme_classic(base_size=15) +
xlab("Coefficient Estimate") +
theme(plot.title = element_text(face="bold"))
dwplot(tidied_all,
ggtitle("Coefficient estimates of OLS regressions") +
vline = geom_vline(xintercept = 0, colour = "grey60", linetype = 2)) %>%
relabel_predictors(c('ch' = "Convex Hull", 'hc' = 'Human Compactness',
'pp' = "Polsby-Popper", 'reock' = "Reock")) +
theme_classic(base_size=15) +
xlab("Coefficient Estimate") +
theme(plot.title = element_text(face="bold"))
tidied_all <-rbind(tidied_10, tidied_25, tidied_50, tidied_75, tidied_90, tidied_0)
dwplot(tidied_all,
ggtitle("Coefficient estimates of OLS regressions") +
vline = geom_vline(xintercept = 0, colour = "grey60", linetype = 2)) %>%
relabel_predictors(c('ch' = "Convex Hull", 'hc' = 'Human Compactness',
'pp' = "Polsby-Popper", 'reock' = "Reock")) +
theme_classic(base_size=15) +
xlab("Coefficient Estimate") +
theme(plot.title = element_text(face="bold"))
dwplot(tidied_all,
vline = geom_vline(xintercept = 0, colour = "grey60", linetype = 2)) %>%
relabel_predictors(c('ch' = "Convex Hull", 'hc' = 'Human Compactness',
'pp' = "Polsby-Popper", 'reock' = "Reock")) +
ggtitle("Coefficient estimates of OLS regressions") +
theme_classic(base_size=15) +
xlab("Coefficient Estimate") +
theme(plot.title = element_text(face="bold"))
